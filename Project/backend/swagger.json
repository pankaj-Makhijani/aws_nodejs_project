{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "OpenAPI Specification using swagger",
      "description": "Hello there, Here is our API Specification using swagger-UI",
      "license": {
        "name": "Pankaj Makhijani",
        "url": "https://github.com/pankaj-Makhijani"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
      {
        "name": "Users",
        "description": "API for interacting with the users in the system"
      },{
        "name":"certificates",
        "description": "API for interacting with the certificates in the system"
      }
    ],
    "schemes": [
      "http","https"
    ],
    "consumes": [
      "application/json",
      "application/x-www-form-urlencoded"
    ],
    "produces": [
      "application/json",
      "application/x-www-form-urlencoded"
    ],
    "paths": {
      "/":{
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Default Get Route",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/signup": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Create new user in system",
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created"
            },
            "400":{
              "description":"User Creation Failed"
            }
          }
        }
      },
      "/findonebyid/{userId}": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user with given ID",
          "responses": {
            "200": {
              "description": "User is found",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "/deleteuserbyid/{userId}":{
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to Delete",
            "type": "string"
          }
        ],
        "delete":{
          "tags": [
            "Users"
          ],
          "summary": "Delete user with given ID",
          "responses": {
            "200": {
              "description": "User Deleted Successfully"
            },
            "400":{
              "description":"User Deletion Failed"
            }
          }
        }
      },
      "/updateuserbyid":{
        "put": {
          "tags": [
            "Users"
          ],
          "summary": "Create new user in system",
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "User Updated Successfully"
            },
            "400":{
              "description":"User Updation Failed"
            }
          }
        }
      },
      "/createcard":{
        "post":{
          "tags":[
            "certificates"
          ],
          "summary": "Create new certificate in system",
          "parameters": [
            {
              "name": "cname",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/createcertificates"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
          }
        }
      },
      "/{id}/removecard":{
        "post":{
          "tags":[
            "certificates"
          ],
          "summary": "Remove certificate from user profile",
          "parameters": [
            {
              
              "name": "cid",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/removecertificates"
              }
            },{
              "name": "id",
            "in": "path",
            "required": true
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
          }
      }
      },
      "/{id}/addcard":{
        "post":{
          "tags":[
            "certificates"
          ],
          "summary": "Add certificate to user profile",
          "parameters": [
            {
              
              "name": "cid",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/profilecertificates"
              }
            },{
              "name": "id",
            "in": "path",
            "required": true
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
          }
      }
      },
      "/deletecardbyid":{
        "post":{
          "tags":[
            "certificates"
          ],
          "summary": "Delete certificate from system",
          "parameters": [
            {
              
              "name": "cardid",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/deletecertificates"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
          }
      }
      },
      "/getallcards":{
        "get":{
          "tags":[
            "certificates"
          ],
          "summary": "Get all certficates details",
          "produces": [
            "application/json"
          ],
          "responses": {
          }
      }
      }
    },
    "definitions": {
      "User": {
        "required": [
          "email",
          "id",
          "fname",
          "lname",
          "pass"
        ],
        "properties": {
          
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "lname": {
            "type": "string",
            "uniqueItems": true,
            "length":"2 to 16",
            "Not In":"Root/Admin"
          },
          "fname": {
            "type": "string",
            "uniqueItems": true,
            "length":"2 to 16",
            "Not In":"Root/Admin"
          },
          "pass":{
            "type":"string",
            "uniqueItems": true,
            "length":"8 to 16"
          }
        }
      },
      "Users": {
        "required": [
          "email",
          "uid",
          "fname",
          "lname"
        ],
        "properties": {
          "uid":{
            "type":"number"
          },
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "lname": {
            "type": "string",
            "uniqueItems": true,
            "length":"2 to 16",
            "Not In":"Root/Admin"
          },
          "fname": {
            "type": "string",
            "uniqueItems": true,
            "length":"2 to 16",
            "Not In":"Root/Admin"
          }
        }
      },
      "createcertificates":{
        "required":[
          "cname"
        ],
        "properties":{
          "cname":{
            "type":"string"
          }
        }
      },
      "profilecertificates":{
        "required":[
          "cid"
        ],
        "properties":{
          "cid":{
            "type":"number"
          }
        }
      },
      "deletecertificates":{
        "required":[
          "cardid"
        ],
        "properties":{
          "cardid":{
            "type":"number"
          }
        }
      }
    }
  }
  